<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>摆人日寄</title>
    <link>https://shenyiminghfut.github.io/</link>
    <description>Recent content on 摆人日寄</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hant</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Sat, 12 Mar 2022 10:58:08 -0400</lastBuildDate>
    
        <atom:link href="https://shenyiminghfut.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>HTTP状态码速查表</title>
        <link>https://shenyiminghfut.github.io/posts/http-%E7%8A%B6%E6%80%81%E7%A0%81%E9%80%9F%E6%9F%A5/</link>
        <pubDate>Sat, 12 Mar 2022 10:58:08 -0400</pubDate>
        
        <guid>https://shenyiminghfut.github.io/posts/http-%E7%8A%B6%E6%80%81%E7%A0%81%E9%80%9F%E6%9F%A5/</guid>
        <description>摆人日寄 https://shenyiminghfut.github.io/posts/http-%E7%8A%B6%E6%80%81%E7%A0%81%E9%80%9F%E6%9F%A5/ -&lt;blockquote&gt;
&lt;p&gt;HTTP 状态码是表示一次 HTTP 请求的响应状态，是网页可用性的重要指标。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://quanxin.org/http-status-code&#34; title=&#34;HTTP状态码&#34;&gt;HTTP 状态码&lt;/a&gt;（HTTP Status Code）是用来表示网页服务器 HTTP 响应状态的 3 位数字代码。下面列出了常见的网页 HTTP 状态码及其含义，供参考。更多不常见的 HTTP 状态的含义，请参考 RFC 2616 规范。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1xx-状态表示临时响应&#34;&gt;1xx 状态：表示临时响应&lt;/h2&gt;
&lt;p&gt;1xx 系列状态码，表示请求已收到，需要请求者继续执行操作的状态代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;继续&lt;/strong&gt;（Continue）&lt;/p&gt;
&lt;p&gt;请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;切换协议&lt;/strong&gt;（Switching Protocols）&lt;/p&gt;
&lt;p&gt;请求者已要求服务器切换协议，服务器已确认并做好了的切换的准备&lt;/p&gt;
&lt;h2 id=&#34;2xx-状态表示成功响应&#34;&gt;2xx 状态：表示成功响应&lt;/h2&gt;
&lt;p&gt;2xx 系列状态码，表示成功处理了请求的状态代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;成功&lt;/strong&gt;（Success）&lt;/p&gt;
&lt;p&gt;服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;已创建&lt;/strong&gt;（Created）&lt;/p&gt;
&lt;p&gt;请求成功，并且服务器创建了新的资源&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;已接受&lt;/strong&gt;（Accepted）&lt;/p&gt;
&lt;p&gt;服务器已接受请求，但尚未处理&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;非授权信息&lt;/strong&gt;（Non Authoritative Information）&lt;/p&gt;
&lt;p&gt;服务器已成功处理了请求，但返回的信息可能来自另一来源&lt;/p&gt;
&lt;p&gt;从 HTTP/1.1 开始支持&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无内容&lt;/strong&gt;（No Content）&lt;/p&gt;
&lt;p&gt;服务器成功处理了请求，但没有返回任何内容&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重置内容&lt;/strong&gt;（Reset Content）&lt;/p&gt;
&lt;p&gt;服务器成功处理了请求，但没有返回任何内容。该响应要求浏览器重置它所显示的内容&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;部分内容&lt;/strong&gt;（Partial Content）&lt;/p&gt;
&lt;p&gt;由于客户端发送了 &lt;code&gt;range&lt;/code&gt; 头信息，服务器成功返回了部分资源&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7233 定义&lt;/p&gt;
&lt;h2 id=&#34;3xx-状态表示重定向&#34;&gt;3xx 状态：表示重定向&lt;/h2&gt;
&lt;p&gt;3xx 系列状态码，表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多种选择&lt;/strong&gt;（Multiple Choices）&lt;/p&gt;
&lt;p&gt;针对不同请求，服务器可执行多种操作。服务器可根据请求者的选择执行对应的操作，或者提供一个操作列表供请求者选择&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;永久移动&lt;/strong&gt;（Moved Permanently）&lt;/p&gt;
&lt;p&gt;请求的网页已永久移动到新位置。对于 GET 或 HEAD 请求，服务器返回此响应时，会自动将请求者转到新位置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;资源已找到（临时移动）&lt;/strong&gt;（Found (Moved Temporarily)）&lt;/p&gt;
&lt;p&gt;告诉客户端，请到另一处 URL 获取需要的资源（该状态已被 303 和 307 状态取代）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看其他位置&lt;/strong&gt;（See Other）&lt;/p&gt;
&lt;p&gt;请求者应当对不同的位置使用单独的 GET 请求来获取资源时，服务器返回此代码&lt;/p&gt;
&lt;p&gt;从 HTTP/1.1 开始支持&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;资源未修改&lt;/strong&gt;（Not Modified）&lt;/p&gt;
&lt;p&gt;自从上次请求后，网页未做过修改。服务器返回此响应时，不会返回网页内容&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7232 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用代理&lt;/strong&gt;（Use Proxy）&lt;/p&gt;
&lt;p&gt;请求者只能使用代理访问所请求的资源。资源地址将包含在响应中（出于安全考虑，许多客户端不会遵守该响应状态）&lt;/p&gt;
&lt;p&gt;从 HTTP/1.1 开始支持&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;切换代理&lt;/strong&gt;（Switch Proxy）&lt;/p&gt;
&lt;p&gt;后续请求应该使用指定的代理（在最新版的 HTTP 规范中，该状态码已经不再使用）&lt;/p&gt;
&lt;p&gt;该状态码已废弃&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;临时重定向&lt;/strong&gt;（Temporary Redirect）&lt;/p&gt;
&lt;p&gt;请求者应使用另一个 URL 重新发起一次请求，但后续的请求仍应使用原来的 URL&lt;/p&gt;
&lt;p&gt;从 HTTP/1.1 开始支持&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;永久重定向&lt;/strong&gt;（Permanent Redirect）&lt;/p&gt;
&lt;p&gt;当前请求和后续的请求都应该向另一个 URL 发起请求&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7538 定义&lt;/p&gt;
&lt;h2 id=&#34;4xx-状态表示客户端错误&#34;&gt;4xx 状态：表示客户端错误&lt;/h2&gt;
&lt;p&gt;4xx 系列状态码，表示客户端请求可能出现了错误，妨碍了服务器的处理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;错误请求&lt;/strong&gt;（Bad Request）&lt;/p&gt;
&lt;p&gt;服务器不理解客户端请求的语法，如：请求语法错误、请求体过大以及带有欺骗性的请求路径&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;未授权&lt;/strong&gt;（Unauthorized）&lt;/p&gt;
&lt;p&gt;访问的资源要求身份验证，但请求时未提供授权或提供了错误的授权。对于需要登录的网页，服务器可能返回此响应&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7235 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;需要支付信息&lt;/strong&gt;（Payment Required）&lt;/p&gt;
&lt;p&gt;为以后使用保留。通常用于需要提供支付的场景，如数字钞票或在线支付。一个例子是：Google 开发者 API 使用 402 状态来表示超过了每日请求上限的情况&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;禁止访问&lt;/strong&gt;（Forbidden）&lt;/p&gt;
&lt;p&gt;服务器已收到请求，但拒绝提供服务。出现此状态通常是因为请求者没有足够的权限访问请求的资源&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;页面未找到&lt;/strong&gt;（Not Found）&lt;/p&gt;
&lt;p&gt;服务器找不到请求的网页或资源&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不支持的请求方法&lt;/strong&gt;（Method Not Allowed）&lt;/p&gt;
&lt;p&gt;服务器不支持当前请求方法。比如：某些资源只支持 GET 和 POST 请求，如果发起 HEAD 请求，服务器将返回该状态&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不被接受&lt;/strong&gt;（Not Acceptable）&lt;/p&gt;
&lt;p&gt;服务器无法使用请求的内容特性响应请求的网页，即：不支持请求头部中 &lt;code&gt;Accept&lt;/code&gt; 字段对应的内容&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;需要代理授权&lt;/strong&gt;（Proxy Authentication Required）&lt;/p&gt;
&lt;p&gt;此状态代码与 401（未授权）类似，但指定请求者应当授权使用代理&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7235 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请求超时&lt;/strong&gt;（Request Timeout）&lt;/p&gt;
&lt;p&gt;服务器等候请求时发生超时&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请求冲突&lt;/strong&gt;（Conflict）&lt;/p&gt;
&lt;p&gt;服务器在完成请求时发生冲突。服务器必须在响应中包含有关冲突的信息&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;已删除&lt;/strong&gt;（Gone）&lt;/p&gt;
&lt;p&gt;如果请求的资源已永久删除，服务器就会返回此响应&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;需要有效长度&lt;/strong&gt;（Length Required）&lt;/p&gt;
&lt;p&gt;服务器无法处理不含有内容长度标头字段（Content-Length）的请求&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;未满足前提条件&lt;/strong&gt;（Precondition Failed）&lt;/p&gt;
&lt;p&gt;服务器未满足请求者在请求中设置的其中一个前提条件&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7232 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请求实体过大&lt;/strong&gt;（Payload Too Large）&lt;/p&gt;
&lt;p&gt;服务器无法处理请求，因为请求实体过大，超出服务器的处理能力&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7231 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请求的 URI 过长&lt;/strong&gt;（URI Too Long）&lt;/p&gt;
&lt;p&gt;请求的 URI（通常为网址）过长，服务器无法处理&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7231 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不支持的媒体类型&lt;/strong&gt;（Unsupported Media Type）&lt;/p&gt;
&lt;p&gt;服务器不支持请求的内容格式（Content-Type）&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7231 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请求范围不符合要求&lt;/strong&gt;（Range Not Satisfiable）&lt;/p&gt;
&lt;p&gt;客户端请求服务器资源的某一部分，但服务器不能提供该部分内容时，则会返回此状态码&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7233 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;未满足期望值&lt;/strong&gt;（Expectation Failed）&lt;/p&gt;
&lt;p&gt;服务器不能满足 &amp;ldquo;Expection&amp;rdquo; 请求头部的要求时返回该状态码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;地址错误的请求&lt;/strong&gt;（Misdirected Request）&lt;/p&gt;
&lt;p&gt;当请求被定向到一个不能输出响应的服务器时，则会返回该状态&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 7540 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无法处理的实体&lt;/strong&gt;（Unprocessable Entity）&lt;/p&gt;
&lt;p&gt;请求格式正确，但由于语义错误，导致无法响应请求&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 4918 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;被锁定&lt;/strong&gt;（Locked）&lt;/p&gt;
&lt;p&gt;正在访问的资源已被锁定&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 4918 定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;依赖请求失败&lt;/strong&gt;（Failed Dependency）&lt;/p&gt;
&lt;p&gt;由于之前的某个请求（即依赖的请求）发生错误，导致当前请求失败&lt;/p&gt;
&lt;p&gt;该状态码由 RFC 4918 定义&lt;/p&gt;
&lt;h2 id=&#34;5xx-状态表示服务器错误&#34;&gt;5xx 状态：表示服务器错误&lt;/h2&gt;
&lt;p&gt;5xx 系列状态码，表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务器内部错误&lt;/strong&gt;（Internal Server Error）&lt;/p&gt;
&lt;p&gt;服务器内部发生错误，无法完成请求&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;尚未实现&lt;/strong&gt;（Not Implemented）&lt;/p&gt;
&lt;p&gt;服务器尚不具备完成请求的条件：要么无法识别请求方法；要么缺乏完成请求的能力&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;错误网关&lt;/strong&gt;（Bad Gateway）&lt;/p&gt;
&lt;p&gt;服务器作为网关或代理，从上游服务器收到无效响应&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务不可用&lt;/strong&gt;（Service Unavailable）&lt;/p&gt;
&lt;p&gt;服务器目前无法使用（由于超载或停机维护）。通常，这只是一个暂时的状态&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网关超时&lt;/strong&gt;（Gateway Timeout）&lt;/p&gt;
&lt;p&gt;服务器作为网关或代理，但是没有及时从上游服务器收到请求&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不支持的 HTTP 协议版本&lt;/strong&gt;（HTTP Version Not Supported）&lt;/p&gt;
&lt;p&gt;服务器不支持请求中所用的 HTTP 协议版本&lt;/p&gt;
&lt;p&gt;HTTP 响应状态码是网页服务器最重要的参考指标之一，了解常见 HTTP 状态码的含义，能更好地指导网站对优化。作为程序开发者以及网站管理员，需要了解并熟悉这些常见 HTTP 状态码的含义，并合理地应用到日常 web 开发中。&lt;/p&gt;
- https://shenyiminghfut.github.io/posts/http-%E7%8A%B6%E6%80%81%E7%A0%81%E9%80%9F%E6%9F%A5/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title> Vim 常用的命令</title>
        <link>https://shenyiminghfut.github.io/posts/vim-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/</link>
        <pubDate>Tue, 09 Mar 2021 10:58:08 -0400</pubDate>
        
        <guid>https://shenyiminghfut.github.io/posts/vim-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/</guid>
        <description>摆人日寄 https://shenyiminghfut.github.io/posts/vim-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/ -&lt;blockquote&gt;
&lt;p&gt;记录了 Vim 编辑器常用命令速查功能，这些命令分为全局命令、光标移动、插入模式、文本编辑、缩进、复制、查找 / 替换、宏、寄存器、标签、差异比较等常用的 Vim 命令，是每位 Vim 使用者必备的参考资料。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;本速查表按分类列出了 Vim 常用的命令和快捷键，数量较多，可使用 Ctrl + F 进行查找。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;全局命令&#34;&gt;全局命令&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;移动光标&#34;&gt;移动光标&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;插入模式插入--追加文本&#34;&gt;插入模式（插入 / 追加文本）&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;编辑文本&#34;&gt;编辑文本&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;选择文本可视化模式&#34;&gt;选择文本（可视化模式）&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;可视化模式命令&#34;&gt;可视化模式命令&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;寄存器&#34;&gt;寄存器&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;标记和位置&#34;&gt;标记和位置&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;宏&#34;&gt;宏&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;复制剪切和粘贴&#34;&gt;复制、剪切和粘贴&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;文本缩进&#34;&gt;文本缩进&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;文本搜索和替换&#34;&gt;文本搜索和替换&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;多文件编辑&#34;&gt;多文件编辑&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;多文件搜索&#34;&gt;多文件搜索&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;标签&#34;&gt;标签&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;diff文件比较&#34;&gt;Diff（文件比较）&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;退出&#34;&gt;退出&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
- https://shenyiminghfut.github.io/posts/vim-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>中文文本测试</title>
        <link>https://shenyiminghfut.github.io/posts/chinese/</link>
        <pubDate>Thu, 14 Nov 2019 11:25:05 -0400</pubDate>
        
        <guid>https://shenyiminghfut.github.io/posts/chinese/</guid>
        <description>摆人日寄 https://shenyiminghfut.github.io/posts/chinese/ -&lt;p&gt;　　这样看来， 邓拓在不经意间这样说过，越是没有本领的就越加自命不凡。这不禁令我深思。 我们不得不面对一个非常尴尬的事实，那就是， 一般来说， 所谓中午吃什么，关键是中午吃什么需要如何写。 伏尔泰说过一句富有哲理的话，坚持意志伟大的事业需要始终不渝的精神。这启发了我， 那么， 对我个人而言，中午吃什么不仅仅是一个重大的事件，还可能会改变我的人生。 这样看来， 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 一般来讲，我们都必须务必慎重的考虑考虑。 黑格尔说过一句富有哲理的话，只有永远躺在泥坑里的人，才不会再掉进坑里。这启发了我， 我们不得不面对一个非常尴尬的事实，那就是， 既然如何， 在这种困难的抉择下，本人思来想去，寝食难安。&lt;/p&gt;
&lt;p&gt;　　我认为， 而这些并不是完全重要，更加重要的问题是， 了解清楚中午吃什么到底是一种怎么样的存在，是解决一切问题的关键。 中午吃什么因何而发生？ 而这些并不是完全重要，更加重要的问题是， 卢梭在不经意间这样说过，浪费时间是一桩大罪过。这启发了我， 既然如此， 从这个角度来看， 歌德在不经意间这样说过，意志坚强的人能把世界放在手中像泥块一样任意揉捏。我希望诸位也能好好地体会这句话。 我认为， 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 莎士比亚在不经意间这样说过，人的一生是短的，但如果卑劣地过这一生，就太长了。带着这句话，我们还要更加慎重的审视这个问题： 带着这些问题，我们来审视一下中午吃什么。 中午吃什么因何而发生？ 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 布尔沃曾经说过，要掌握书，莫被书掌握；要为生而读，莫为读而生。这似乎解答了我的疑惑。 而这些并不是完全重要，更加重要的问题是， 生活中，若中午吃什么出现了，我们就不得不考虑它出现了的事实。 本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。 带着这些问题，我们来审视一下中午吃什么。 生活中，若中午吃什么出现了，我们就不得不考虑它出现了的事实。 我认为， 一般来说， 中午吃什么，到底应该如何实现。 我们不得不面对一个非常尴尬的事实，那就是， 所谓中午吃什么，关键是中午吃什么需要如何写。 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 现在，解决中午吃什么的问题，是非常非常重要的。&lt;/p&gt;
&lt;p&gt;　　我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 可是，即使是这样，中午吃什么的出现仍然代表了一定的意义。 带着这些问题，我们来审视一下中午吃什么。 本人也是经过了深思熟虑，在每个日日夜夜思考这个问题。 我认为， 问题的关键究竟为何？ 非洲曾经提到过，最灵繁的人也看不见自己的背脊。这启发了我， 易卜生说过一句富有哲理的话，伟大的事业，需要决心，能力，组织和责任感。这似乎解答了我的疑惑。 一般来说， 在这种困难的抉择下，本人思来想去，寝食难安。 中午吃什么，到底应该如何实现。 经过上述讨论， 我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 中午吃什么因何而发生？
带着这些问题，我们来审视一下中午吃什么。 对我个人而言，中午吃什么不仅仅是一个重大的事件，还可能会改变我的人生。&lt;/p&gt;
- https://shenyiminghfut.github.io/posts/chinese/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Git命令速查表</title>
        <link>https://shenyiminghfut.github.io/posts/git-%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/</link>
        <pubDate>Tue, 09 Apr 2019 10:58:08 -0400</pubDate>
        
        <guid>https://shenyiminghfut.github.io/posts/git-%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/</guid>
        <description>摆人日寄 https://shenyiminghfut.github.io/posts/git-%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/ -&lt;blockquote&gt;
&lt;p&gt;Git 是一款流行的版本管理工具，熟练使用 Git 命令是用好 Git 的基础。本参考表提供了常用 Git 命令的速查功能，是技术开发人员必备的参考资料。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;创建命令&#34;&gt;创建命令&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;本地更改&#34;&gt;本地更改&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;提交历史&#34;&gt;提交历史&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;分支和标签&#34;&gt;分支和标签&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;删除命令&#34;&gt;删除命令&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;合并和衍合&#34;&gt;合并和衍合&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;撤销命令&#34;&gt;撤销命令&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;配置命令&#34;&gt;配置命令&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;其他命令&#34;&gt;其他命令&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
- https://shenyiminghfut.github.io/posts/git-%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5/ - This is a customized copyright.</description>
        </item>
    
    
  </channel>
</rss> 